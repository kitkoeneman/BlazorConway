@page "/gameboard/{height:int}/{width:int}"

<h3>GameBoard</h3>

<p>Display game board with height @Height and width @Width. </p>

<style>
	.game-board-container {
		display: grid;
		grid-template-columns: @Width;
	}
	.cell-button-dead {
		height: 24px;
		width: 24px;
		background-color: white;
	}
	.cell-button-alive {
		height: 24px;
		width: 24px;
		background-color: green;
	}
</style>

<div class="grid">
	@foreach (var cell in CellGrid)
	{
		<button class="cell-button-dead" @onclick="cell.ClickCell">X</button>
		if (cell.Column == Width - 1)
		{
			<div></div>
		}
	}
</div>



@code {
	[Parameter]
	public int Height { get; set; }

	[Parameter]
	public int Width { get; set; }


	private Cell[,] CellGrid;

	public string ButtonClass = "cell-button-dead";

	protected override void OnInitialized()
	{
		CellGrid = new Cell[Height, Width];

		for ( int row = 0; row < Height; row++)
		{
			for (int column = 0; column < Width; column++)
			{
				var cell = new Cell(row, column);
				CellGrid[row, column] = cell;
			}
		}
	}
	/*	
	private void ToggleState(int row, int col)
	{
		Console.WriteLine("Toggle " + row + " " + col);
		GameBoardStates[row, col] = !GameBoardStates[row, col];

		ButtonClass = "cell-button-alive";
	}
	*/

	public class Cell
	{
		public int Row { get; }
		public int Column { get; }
		public bool IsAlive { get; set; }

		public Cell(int row, int column) {
			Row = row;
			Column = column;
			IsAlive = false;
		}

		public void ClickCell()
		{
			Console.WriteLine("Cell clicked at " + Row + ", " + Column + " (" + this.IsAlive + ")");
			this.IsAlive = !this.IsAlive;
			Console.WriteLine("Cell is now " + this.IsAlive);
		}
	}
}
